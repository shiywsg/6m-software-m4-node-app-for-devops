version: 2.1
orbs:
  node: circleci/node@5.1.0
  docker: circleci/docker@2.2.0
  heroku: circleci/heroku@2.0.0
  snyk: snyk/snyk@1.5.0
executors:
  docker-publisher:
    environment:
      IMAGE_TAG: shiywsg/sampleci:latest
      DOCKERHUB_USERNAME: shiywsg
      DOCKERHUB_PASS: dckr_pat_QxMO0rXU42Y9XGdvqw6Rh2GZCLI
    docker:
      - image: docker:stable

jobs:
  build: 
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Installing dependencies..."
          npm install
  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Running tests..."
          npm run test
  create:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build --tag "${IMAGE_TAG}" .
      - run:
          name: Archive Docker image
          command: docker save --output image.tar "${IMAGE_TAG}"
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  push:
    executor: docker-publisher
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load Docker image
          command: docker load --input /tmp/workspace/image.tar
      - run:
          name: Publish Docker image
          command: |
            echo "${DOCKERHUB_PASS}" | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
            docker push "${IMAGE_TAG}"
  deploy:
        docker:
        - image: cimg/node:16.10
        steps:
        - setup_remote_docker      
        - heroku/install
        - checkout
        - run:
            name: Heroku Container Push
            command: | 
                heroku container:login
                heroku container:push web -a shiywsg-su-devops
                heroku container:release web -a shiywsg-su-devops          
  scan:
    docker:
    - image: cimg/node:16.10
      steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run: docker build -t $IMAGE_NAME .
      - snyk/scan: 
          docker-image-name: $IMAGE_NAME


workflows:
  simple_workflow:
    jobs:
    - build:
        filters:
          branches:
            only:
              main
    - test:
        requires:
          - build
        filters:
          branches:
            only: main
    - scan: 
         requires:
          - build
        filters:
          branches:
            only: main
    - create:
        filters:
          tags:
            only: '*.*.*'
    - push:
        requires:
          - build
        filters:
          branches:
            only: main
          tags:
            only: '*.*.*'
    - deploy:
          requires:
            - push   
          filters:     
            tags:
              only: '*.*.*'
